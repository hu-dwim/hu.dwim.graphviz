(in-package :graphviz)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; here are some hand made overrides for the swig
;;; generated file

(defcstruct port
;	(p :pointer)
	(xcoord :int)
	(ycoord :int)
	(theta :double)
	(bp :pointer)
	(defined :boolean)
	(constrained :boolean)
	(clip :boolean)
	(order :unsigned-char)
	(side :unsigned-char))

(defcstruct textlabel_t
	(text :string)
	(fontname :string)
	(fontcolor :string)
	(fontsize :double)
;	(dimen :pointer)
        (width :float)
        (height :float)
;	(p :pointer)
        (xcoord :int)
        (ycoord :int)
	(d :pointer)
	(set :pointer)
	(html :pointer)
	(u :pointer))

(defcstruct Agnode_t
	;(tag :int)
	;(pad :int :offset 4)
	(handle :int)
	(attr :pointer)
	(name :string)
	(id :int)
	(graph :pointer)
	(u :pointer))

(defcstruct Agedge_t
	;(tag :int)
	;(printkey :int)
	(handle :int)
	(attr :pointer)
	(head :pointer)
	(tail :pointer)
	(id :int)
	(u :pointer))

(defcstruct bezier
	(list :pointer)
	(size :int)
	(sflag :int)
	(eflag :int)
	;(sp :pointer)
        ;(ep :pointer)
        (spx :int)
        (spy :int)
	(epx :int)
        (epy :int))

(defcstruct Agraph_t
	;(tag :int)
	;(kind :int)
	(handle :int)
	(attr :pointer)
	(name :string)
	(univ :pointer)
	(nodes :pointer)
	(inedges :pointer)
	(outedges :pointer)
	(root :pointer)
	(meta_node :pointer)
	(proto :pointer)
	(u :pointer))

(defcstruct Agnodeinfo_t
	(shape :pointer)
	(shape_info :pointer)
	;(coord :pointer)
        (xcoord :int)
        (ycoord :int)
	(width :double)
	(height :double)
	;(bb :pointer)
        (bb-lower-left-x :double)
        (bb-lower-left-y :double)
        (bb-upper-right-x :double)
        (bb-upper-right-y :double)
	(ht :int)
	(lw :int)
	(rw :int)
	(label :pointer)
	(alg :pointer)
	(state :char)
	(gui_state :unsigned-char)
	(clustnode :pointer)
	(pinned :pointer)
	(xsize :short)
	(ysize :short)
	(id :int)
	(heapindex :int)
	(hops :int)
	(pos :pointer)
	(dist :double)
	(showboxes :pointer)
	(has_port :pointer)
	(node_type :char)
	(mark :char)
	(onstack :char)
	(ranktype :char)
	(weight_class :char)
	(next :pointer)
	(prev :pointer)
	(in :pointer)
	(out :pointer)
	(flat_out :pointer)
	(flat_in :pointer)
	(other :pointer)
	(clust :pointer)
	(UF_size :int)
	(UF_parent :pointer)
	(inleaf :pointer)
	(outleaf :pointer)
	(rank :int)
	(order :int)
	(mval :int)
	(save_in :pointer)
	(save_out :pointer)
	(tree_in :pointer)
	(tree_out :pointer)
	(par :pointer)
	(low :int)
	(lim :int)
	(priority :int)
	(pad :pointer))

(defcstruct Agedgeinfo_t
	(spl :pointer)
	(tail_port port)
	(head_port port)
	(label :pointer)
	(head_label :pointer)
	(tail_label :pointer)
	(edge_type :char)
	(adjacent :char)
	(label_ontop :char)
	(gui_state :unsigned-char)
	(to_orig :pointer)
	(alg :pointer)
	(factor :double)
	(dist :double)
	(path :pointer)
	(showboxes :pointer)
	(conc_opp_flag :pointer)
	(xpenalty :short)
	(weight :int)
	(cutvalue :int)
	(tree_index :int)
	(count :short)
	(minlen :unsigned-short)
	(to_virt :pointer))

(defcstruct Agraphinfo_t
	(drawing :pointer)
	(label :pointer)
	(bb :pointer)
	(border :pointer :offset 16)
	(gui_state :unsigned-char :offset 32)
	(has_labels :pointer)
	(has_images :pointer)
	(charset :unsigned-char)
	(rankdir :int)
	(ht1 :int)
	(ht2 :int)
	(flags :unsigned-short)
	(alg :pointer)
	(gvc :pointer)
	(cleanup :pointer)
	(neato_nlist :pointer)
	(move :int)
	(dist :pointer)
	(spring :pointer)
	(sum_t :pointer)
	(t_ :pointer)
	(ndim :int)
	(n_cluster :int)
	(clust :pointer)
	(nlist :pointer)
	(rank :pointer)
	(comp :pointer)
	(minset :pointer)
	(maxset :pointer)
	(n_nodes :long)
	(minrank :short)
	(maxrank :short)
	(has_flat_edges :pointer)
	(showboxes :pointer)
	(cluster_was_collapsed :pointer)
	(nodesep :int)
	(ranksep :int)
	(ln :pointer)
	(rn :pointer)
	(leader :pointer)
	(rankleader :pointer)
	(expanded :pointer)
	(installed :char)
	(set_type :char)
	(label_pos :char)
	(exact_ranksep :pointer))
